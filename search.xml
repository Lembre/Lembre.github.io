<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[IDEA创建MyBatis逆向工程]]></title>
    <url>%2F2018%2F09%2F17%2FIDEA%E5%88%9B%E5%BB%BAMyBatis%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[过去我们在开发时都需要通过数据库中的表然后自己在po包下手动建立相对应的pojo类，并要创建相应的mapper.xml写出对表的所有操作，而使用插件mybatis-generator-core生成mybatis逆向工程就不用我们自己再编写pojo类与相应的mapper类和相应的xml文件，它可以自动对单表生成sql，包括:mapper.xml、mapper.java、表名.java(po类)。这是非常方便快捷的。下面我将为你们介绍如何使用插件生成mybatis的逆向工程，只需三步而已。 1.逆向工程的配置1.1pom.xml的需要导入的依赖和配置 需要导入的依赖 &lt;!-- -添加mybatis-generator-core插件 --&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt; &lt;version&gt;1.3.6&lt;/version&gt; &lt;/dependency&gt; &lt;!-- 数据库连接包 --&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.30&lt;/version&gt; &lt;/dependency&gt; &lt;!-- 日志文件管理包 --&gt; &lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;${log4j.version}&lt;/version&gt; &lt;/dependency&gt; 需要更改的配置 &lt;build&gt; &lt;!-- 强制将xml文件打到war包中 s--&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/java&lt;/directory&gt; &lt;includes&gt; &lt;include&gt;**/*.xml&lt;/include&gt; &lt;/includes&gt; &lt;filtering&gt;false&lt;/filtering&gt; &lt;/resource&gt; &lt;/resources&gt; &lt;pluginManagement&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.3.6&lt;/version&gt; &lt;configuration&gt; &lt;verbose&gt;true&lt;/verbose&gt; &lt;overwrite&gt;true&lt;/overwrite&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/pluginManagement&gt; &lt;/build&gt; ###1.2逆向工程的配置文件generatorConfig.xml &lt;?xml version=”1.0” encoding=”UTF-8”?&gt; &lt;!DOCTYPE generatorConfiguration PUBLIC “-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN” “http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt; 关键的属性: javaModelGenerator,生成PO类的位置 sqlMapGenerator,mapper映射文件生成的位置 javaClientGenerator,mapper接口生成的位置 table,其tableName属性对应数据库中相应表 1.3配置相应的运行命令点击Edit Configuration，点击+号，在Command line中输入mybatis-generator:generate -e；点击应用，选择运行。此时逆向工程便成功地建立！ 联系如果需要联系作者，请在主页点击右下角的微信图标，或者通过以下方式: Github@codinglembre Zhihu@codinglembre Blog@codinglembre -]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用Markdown语法]]></title>
    <url>%2F2018%2F05%2F27%2F%E5%B8%B8%E7%94%A8Markdown%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[其实这周挺忙的，各种考试，实验，作业统统集中到一起（内心os:麻木到习以为常了QAQ），但是还是抽空搭建了自己的个人博客网站，第一篇博文也不知道该写什么好，就把昨天自学的Markdown语法写下来了。 关于Markdown，你需要了解的概念Markdown 是一种可以使用 普通文本编辑器编写的轻量级 标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的 语法很简单。常用的标记符号不超过十个。让我们开始学习MarkDown语法吧！ Markdown语法因为MarkDown并不是我的学习方向，我学Markdown只是为了更好的写博文。因此，对于实现的效果相同的语法，我只列出最容易记的那种。若需要系统的学习MarkDown语法，请百度官方文档或者打开MarkDown链接。 1.段落，标题和区块代码①段落: 一个以上的空行则会划分出不同的段落,一般的段落不需要用空白或换行缩进。(标题和正文之间会自动添加阴影线以及段落) ②标题: 推荐使用ATX形式。即在行首插入1到六个#，对应到标题的1到六阶。 ③区块代码: 区块引用则使用 email 形式的 ‘&gt;’ 角括号。 2.强调 可以在需要强调的位置前后加 两个星号 来标记需要强调的区段。 3.列表(共有两种形式)①无序列表:使用星号， 加号，减号来进行标记,例如 +Candy. +Gum. 效果： Candy. Gum. ②有序列表:使用一般的数字接着一个英文句点,例如 Red Green 效果: Red Green 4.链接(不区分大小写，共有两种形式) ①行内形式: []里写 链接文字，()里写 链接地址, 此外还可以为链接指定title属性，title属性可加可不加 ②参考形式:文中的写法 [链接文字]接上[链接标记]，在文本的任意位置添加[链接标记]:链接地址 “链接标题”，链接地址与链接标题前有一个空格。 5图片(类似于链接，分为两种形式) ①行内形式： ![图片Alt]接上(图片地址 “图片Title”) ②参考形式:在文档要插入图片的地方写 ![图片Alt]接上[标记],在文档的最后写上[标记]:图片地址 “Title” 6代码和代码段 ①段落文字中存在代码区段，可以用 反引号 在代码区段左右加一个 `来标记代码区段 ②代码区块已经被格式化,可以使用 tab或者空四个格 ③代码段可以使用 ‘’’代码段’’’ 来实现 需要注意的地方 在设置标题时，#后面务必加上个空格，否则会导致标题效果渲染失败 联系如果需要联系作者，请在主页点击右下角的微信图标，或者通过以下方式: Github@codinglembre Zhihu@codinglembre Blog@codinglembre 完结撒花!!!]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
</search>
