<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>codingLembre&#39;s blog</title>
  
  <subtitle>I have a dream!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://codinglembre.top/"/>
  <updated>2018-09-17T05:31:21.596Z</updated>
  <id>http://codinglembre.top/</id>
  
  <author>
    <name>Lembre</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IDEA创建MyBatis逆向工程</title>
    <link href="http://codinglembre.top/2018/09/17/IDEA%E5%88%9B%E5%BB%BAMyBatis%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    <id>http://codinglembre.top/2018/09/17/IDEA创建MyBatis逆向工程/</id>
    <published>2018-09-17T04:36:10.000Z</published>
    <updated>2018-09-17T05:31:21.596Z</updated>
    
    <content type="html"><![CDATA[<p>过去我们在开发时都需要通过数据库中的表然后自己在po包下手动建立相对应的pojo类，并要创建相应的mapper.xml写出对表的所有操作，而使用插件mybatis-generator-core生成mybatis逆向工程就不用我们自己再编写pojo类与相应的mapper类和相应的xml文件，它可以自动对单表生成sql，包括:mapper.xml、mapper.java、表名.java(po类)。这是非常方便快捷的。下面我将为你们介绍如何使用插件生成mybatis的逆向工程，只需三步而已。</p><a id="more"></a><h2 id="逆向工程的部署"><a href="#逆向工程的部署" class="headerlink" title="逆向工程的部署"></a>逆向工程的部署</h2><h3 id="pom-xml的需要导入的依赖和配置"><a href="#pom-xml的需要导入的依赖和配置" class="headerlink" title="pom.xml的需要导入的依赖和配置"></a>pom.xml的需要导入的依赖和配置</h3><blockquote><p>需要导入的依赖</p></blockquote><pre><code>&lt;!-- -添加mybatis-generator-core插件 --&gt;&lt;dependency&gt;    &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;    &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;    &lt;version&gt;1.3.6&lt;/version&gt;&lt;/dependency&gt;&lt;!-- 数据库连接包 --&gt; &lt;dependency&gt;    &lt;groupId&gt;mysql&lt;/groupId&gt;    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;    &lt;version&gt;5.1.30&lt;/version&gt;&lt;/dependency&gt;&lt;!-- 日志文件管理包 --&gt;&lt;dependency&gt;    &lt;groupId&gt;log4j&lt;/groupId&gt;    &lt;artifactId&gt;log4j&lt;/artifactId&gt;    &lt;version&gt;${log4j.version}&lt;/version&gt;&lt;/dependency&gt;</code></pre><blockquote><p>需要更改的配置</p></blockquote><pre><code>    &lt;build&gt;    &lt;!--  强制将xml文件打到war包中 s--&gt;    &lt;resources&gt;        &lt;resource&gt;            &lt;directory&gt;src/main/java&lt;/directory&gt;            &lt;includes&gt;                &lt;include&gt;**/*.xml&lt;/include&gt;            &lt;/includes&gt;            &lt;filtering&gt;false&lt;/filtering&gt;        &lt;/resource&gt;    &lt;/resources&gt;    &lt;pluginManagement&gt;        &lt;plugins&gt;            &lt;plugin&gt;                &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;                &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;                &lt;version&gt;1.3.6&lt;/version&gt;                &lt;configuration&gt;                    &lt;verbose&gt;true&lt;/verbose&gt;                    &lt;overwrite&gt;true&lt;/overwrite&gt;                &lt;/configuration&gt;            &lt;/plugin&gt;        &lt;/plugins&gt;    &lt;/pluginManagement&gt;&lt;/build&gt;</code></pre><h3 id="逆向工程的配置文件generatorConfig-xml"><a href="#逆向工程的配置文件generatorConfig-xml" class="headerlink" title="逆向工程的配置文件generatorConfig.xml"></a>逆向工程的配置文件generatorConfig.xml</h3><pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;    &lt;!DOCTYPE generatorConfiguration    PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;    &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;    &lt;generatorConfiguration&gt;&lt;!-- 数据库驱动--&gt;&lt;classPathEntry  location=&quot;lib/mysql-connector-java-8.0.11.jar&quot;/&gt;&lt;context id=&quot;DB2Tables&quot;  targetRuntime=&quot;MyBatis3&quot;&gt;    &lt;commentGenerator&gt;        &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot;/&gt;        &lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;        &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt;    &lt;/commentGenerator&gt;    &lt;!--数据库链接URL，用户名、密码 --&gt;    &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql://localhost:3306/ssmtest&quot; userId=&quot;root&quot; password=&quot;123456&quot;&gt;        &lt;!--设置为 true 可以获取 tables 信息, 解决生成文件缺少 xxxByPrimaryKey 的问题 --&gt;        &lt;property name=&quot;useInformationSchema&quot; value=&quot;true&quot;/&gt;    &lt;/jdbcConnection&gt;    &lt;javaTypeResolver&gt;        &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;    &lt;/javaTypeResolver&gt;    &lt;!-- 生成模型的包名和位置--&gt;    &lt;javaModelGenerator targetPackage=&quot;pojo&quot; targetProject=&quot;src/main/java&quot;&gt;        &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;        &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;    &lt;/javaModelGenerator&gt;    &lt;!-- 生成映射文件的包名和位置--&gt;    &lt;sqlMapGenerator targetPackage=&quot;mapping&quot; targetProject=&quot;src/main/java&quot;&gt;        &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;    &lt;/sqlMapGenerator&gt;    &lt;!-- 生成DAO的包名和位置--&gt;    &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;dao&quot; targetProject=&quot;src/main/java&quot;&gt;        &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;    &lt;/javaClientGenerator&gt;    &lt;!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名--&gt;    &lt;table tableName=&quot;user_t&quot; domainObjectName=&quot;User&quot; enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot;&gt;    &lt;/table&gt;&lt;/context&gt;&lt;/generatorConfiguration&gt;</code></pre><blockquote><p>关键的属性:</p></blockquote><ul><li>javaModelGenerator,生成PO类的位置</li><li>sqlMapGenerator,mapper映射文件生成的位置</li><li>javaClientGenerator,mapper接口生成的位置</li><li>table,其tableName属性对应数据库中相应表</li></ul><h3 id="配置相应的运行命令"><a href="#配置相应的运行命令" class="headerlink" title="配置相应的运行命令"></a>配置相应的运行命令</h3><p>点击Edit Configuration，点击+号，在Command line中输入mybatis-generator:generate -e然后点击应用，选择运行，等一会逆向工程便成功地建立！</p><h3 id="联系"><a href="#联系" class="headerlink" title="联系"></a>联系</h3><p>如果需要联系作者，请在主页点击右下角的微信图标，或者通过以下方式:</p><p><a href="https://github.com/Lembre" target="_blank" rel="noopener">Github@codinglembre</a></p><p><a href="https://www.zhihu.com/people/yan-zhong-hui-11/activities" target="_blank" rel="noopener">Zhihu@codinglembre</a></p><p><a href="https://codinglembre.top">Blog@codinglembre</a></p><pre><code>-</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;过去我们在开发时都需要通过数据库中的表然后自己在po包下手动建立相对应的pojo类，并要创建相应的mapper.xml写出对表的所有操作，而使用插件mybatis-generator-core生成mybatis逆向工程就不用我们自己再编写pojo类与相应的mapper类和相应的xml文件，它可以自动对单表生成sql，包括:mapper.xml、mapper.java、表名.java(po类)。这是非常方便快捷的。下面我将为你们介绍如何使用插件生成mybatis的逆向工程，只需三步而已。&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://codinglembre.top/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="MyBatis" scheme="http://codinglembre.top/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>常用Markdown语法</title>
    <link href="http://codinglembre.top/2018/05/27/%E5%B8%B8%E7%94%A8Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://codinglembre.top/2018/05/27/常用Markdown语法/</id>
    <published>2018-05-27T02:09:01.000Z</published>
    <updated>2018-05-28T07:48:06.091Z</updated>
    
    <content type="html"><![CDATA[<p>其实这周挺忙的，各种考试，实验，作业统统集中到一起（内心os:麻木到习以为常了QAQ），但是还是抽空搭建了自己的个人博客网站，第一篇博文也不知道该写什么好，就把昨天自学的Markdown语法写下来了。</p><a id="more"></a><h2 id="关于Markdown，你需要了解的概念"><a href="#关于Markdown，你需要了解的概念" class="headerlink" title="关于Markdown，你需要了解的概念"></a>关于Markdown，你需要了解的概念</h2><p><strong>Markdown</strong> 是一种可以使用 普通文本编辑器编写的轻量级 <strong>标记语言</strong>，通过简单的标记语法，它可以使普通文本内容具有一定的格式。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的 <strong>语法很简单</strong>。常用的标记符号不超过十个。让我们开始学习MarkDown语法吧！</p><h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><p>因为MarkDown并不是我的学习方向，我学Markdown只是为了更好的写博文。因此，对于实现的效果相同的语法，我只列出最容易记的那种。若需要系统的学习MarkDown语法，请百度官方文档或者打开<a href="https://blog.csdn.net/witnessai1/article/details/52551362" target="_blank" rel="noopener">MarkDown</a>链接。</p><h3 id="1-段落，标题和区块代码"><a href="#1-段落，标题和区块代码" class="headerlink" title="1.段落，标题和区块代码"></a>1.段落，标题和区块代码</h3><p>①段落:</p><blockquote><p>一个以上的空行则会划分出不同的段落,一般的段落不需要用空白或换行缩进。(标题和正文之间会自动添加阴影线以及段落)</p></blockquote><p>②标题:</p><blockquote><p>推荐使用ATX形式。即在行首插入1到六个#，对应到标题的1到六阶。</p></blockquote><p>③区块代码: </p><blockquote><p>区块引用则使用 email 形式的 ‘&gt;’ 角括号。</p></blockquote><h3 id="2-强调"><a href="#2-强调" class="headerlink" title="2.强调"></a>2.强调</h3><blockquote><p>可以在需要强调的位置前后加 <strong>两个星号</strong> 来标记需要强调的区段。</p></blockquote><h3 id="3-列表-共有两种形式"><a href="#3-列表-共有两种形式" class="headerlink" title="3.列表(共有两种形式)"></a>3.列表(共有两种形式)</h3><p>①无序列表:使用星号， <strong>加号</strong>，减号来进行标记,例如</p><blockquote><p>  +Candy.</p><p>  +Gum.</p></blockquote><p>效果：</p><ul><li>Candy.</li><li>Gum.</li></ul><p>②有序列表:使用一般的数字接着一个英文句点,例如</p><blockquote><ol><li><p>Red</p></li><li><p>Green</p></li></ol></blockquote><p>效果:</p><ol><li>Red</li><li>Green</li></ol><h3 id="4-链接-不区分大小写，共有两种形式"><a href="#4-链接-不区分大小写，共有两种形式" class="headerlink" title="4.链接(不区分大小写，共有两种形式)"></a>4.链接(不区分大小写，共有两种形式)</h3><blockquote><p>①行内形式: []里写 <strong>链接文字</strong>，()里写 <strong>链接地址</strong>, 此外还可以为链接指定title属性，title属性可加可不加</p><p>②参考形式:文中的写法 [链接文字]接上[链接标记]，在文本的任意位置添加[链接标记]:链接地址 “链接标题”，链接地址与链接标题前有一个空格。</p></blockquote><h3 id="5图片-类似于链接，分为两种形式"><a href="#5图片-类似于链接，分为两种形式" class="headerlink" title="5图片(类似于链接，分为两种形式)"></a>5图片(类似于链接，分为两种形式)</h3><blockquote><p>①行内形式： <strong>![图片Alt]接上(图片地址 “图片Title”)</strong></p><p>②参考形式:在文档要插入图片的地方写 <strong>![图片Alt]接上[标记]</strong>,在文档的最后写上[标记]:图片地址 “Title”</p></blockquote><h3 id="6代码和代码段"><a href="#6代码和代码段" class="headerlink" title="6代码和代码段"></a>6代码和代码段</h3><blockquote><p>①段落文字中存在代码区段，可以用 <strong>反引号</strong> 在代码区段左右加一个 `来标记代码区段</p><p>②代码区块已经被格式化,可以使用 <strong>tab或者空四个格</strong></p><p>③代码段可以使用 <strong>‘’’代码段’’’</strong> 来实现</p></blockquote><h2 id="需要注意的地方"><a href="#需要注意的地方" class="headerlink" title="需要注意的地方"></a>需要注意的地方</h2><blockquote><p>在设置标题时，#后面务必加上个空格，否则会导致标题效果渲染失败</p></blockquote><h2 id="联系"><a href="#联系" class="headerlink" title="联系"></a>联系</h2><p>如果需要联系作者，请在主页点击右下角的微信图标，或者通过以下方式:</p><p><a href="https://github.com/Lembre" target="_blank" rel="noopener">Github@codinglembre</a></p><p><a href="https://www.zhihu.com/people/yan-zhong-hui-11/activities" target="_blank" rel="noopener">Zhihu@codinglembre</a></p><p><a href="https://codinglembre.top">Blog@codinglembre</a></p><p>完结撒花!!!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实这周挺忙的，各种考试，实验，作业统统集中到一起（内心os:麻木到习以为常了QAQ），但是还是抽空搭建了自己的个人博客网站，第一篇博文也不知道该写什么好，就把昨天自学的Markdown语法写下来了。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://codinglembre.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Blog" scheme="http://codinglembre.top/tags/Blog/"/>
    
      <category term="HTML" scheme="http://codinglembre.top/tags/HTML/"/>
    
  </entry>
  
</feed>
